{
  "_args": [
    [
      "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
      "/home/patrickkfkan/dev/volumio/youtube2"
    ]
  ],
  "_from": "patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
  "_id": "yt-channel-info@1.1.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/yt-channel-info",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/patrickkfkan/yt-channel-info/wip-topic-gaming-channels/package.json",
      "gitUrl": "git://github.com/patrickkfkan/yt-channel-info.git#wip-topic-gaming-channels",
      "httpsUrl": "git+https://github.com/patrickkfkan/yt-channel-info.git#wip-topic-gaming-channels",
      "shortcut": "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
      "ssh": "git@github.com:patrickkfkan/yt-channel-info.git#wip-topic-gaming-channels",
      "sshUrl": "git+ssh://git@github.com/patrickkfkan/yt-channel-info.git#wip-topic-gaming-channels",
      "type": "github"
    },
    "name": null,
    "raw": "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
    "rawSpec": "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
    "scope": null,
    "spec": "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/patrickkfkan/yt-channel-info.git#bbb5efb5da6c0c252602588ae8e4f7fdcbbe0b9e",
  "_shasum": "ea543cc3c11aef09355c2a2b2d29bf268320e6a0",
  "_shrinkwrap": null,
  "_spec": "github:patrickkfkan/yt-channel-info#wip-topic-gaming-channels",
  "_where": "/home/patrickkfkan/dev/volumio/youtube2",
  "author": {
    "name": "PrestonFT"
  },
  "bugs": {
    "url": "https://github.com/FreeTubeApp/yt-channel-info/issues"
  },
  "dependencies": {
    "axios": "^0.19.2",
    "querystring": "^0.2.0"
  },
  "description": "Grab YouTube channel information without any official API",
  "devDependencies": {
    "eslint": "^7.6.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1"
  },
  "gitHead": "bbb5efb5da6c0c252602588ae8e4f7fdcbbe0b9e",
  "homepage": "https://github.com/FreeTubeApp/yt-channel-info#readme",
  "keywords": [
    "youtube",
    "youtube channel",
    "youtube playlist",
    "youtube without api",
    "youtube-channel",
    "youtube-fetch",
    "youtube-fetcher",
    "youtube-grabber",
    "youtube-playlist",
    "youtube-scrapper"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "yt-channel-info",
  "optionalDependencies": {},
  "readme": "# YouTube Channel Info NodeJS Documentation\nThis library is designed to receive channel data from YouTube without accessing the official API.\n<br />\nThis method has several advantages:\n* No API key is required, which you should put next to your code;\n* No restrictions on key usage (1 million [quota](https://developers.google.com/youtube/v3/getting-started#quota))\n\nBut there are also disadvantages:\n* Data acquisition time increases by many times;\n* Any change to the YouTube DOM entails non-working methods of this library.\n\nYou must consider this before you use **YouTube Channel Info**\n\n## Installation\n```\nnpm i yt-channel-info --save\n```\n\n## Usage\n\n```javascript\n// If using require\nconst ytch = require('yt-channel-info')\n\n// If using import\nimport ytch from 'yt-channel-info'\n```\n\n## API\n\n**getChannelInfo(channelId)**\n\nReturns information about a given channel ID.\n\n```javascript\nconst channelId = 'UCXuqSBlHAE6Xw-yeJA0Tunw'\n\nytch.getChannelInfo(channelId).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n\n// Response object\n{\n   author: String,\n   authorId: String,\n   authorUrl: String,\n   authorBanners: Array[Object], // Will return null if none exist\n   authorThumbnails: Array[Object], // Will return null if none exist\n   subscriberText: String,\n   subscriberCount: Integer,\n   description: String,\n   isFamilyFriendly: Boolean,\n   relatedChannels: Array[Object],\n   allowedRegions: Array[String]\n}\n```\n\n**getChannelVideos(channelId, [sortBy])**\n\nGrabs videos from a given channel ID.\n\n - `newest` - Grabs videos from a channel sorted by newest / most recently uploaded (Default option if none given)\n - `oldest` - Grabs videos from a channel sorted by oldest videos\n - `popular` - Grabs videos from a channel sorted by the most popular (Highest amount of views)\n \n ```javascript\n const channelId = 'UCXuqSBlHAE6Xw-yeJA0Tunw'\n const sortBy = 'newest'\n\nytch.getChannelVideos(channelId, sortBy).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object\n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with getChannelVideosMore()\n }\n ```\n \n **getChannelVideosMore(continuation)**\n \n Grabs more videos within a channel.  Uses the continuation string returned from `getChannelVideos()` or from past calls to `getChannelVideosMore()`.\n \n  ```javascript\n const continuation = '4qmFsgK9ARIYVUNYdXFTQmxIQUU2WHcteWVKQTBUdW53GqABRWdsd2JHRjViR2x6ZEhNZ0FYcG1VVlZzVUdFeGF6VlNiVkoyV1ZjNWJHVnNUbGhTUmxwWVZrVm9kR1ZHYTNoVU1EVnJUVWR3ZFdNd05VVmFSVVo0Vm10NGRsVnJWa2haYkd4dVUyNXZlbEpxUW5WT1YxRjNXbGhyTkZKcVVqVmhibEpXVkVVNWNtSkdUbnBaYXpWWVUxZDNNMVpSdUFFQQ%3D%3D'\n \nytch.getChannelInfoMore(continuation).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object \n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with getChannelVideosMore()\n }\n ```\n \n **getChannelPlaylistInfo(channelId, [sortBy])**\n \n Grabs playlist information of a given channel ID.\n \n - `last` - Grabs playlists from a channel sorted by the most recently updated playlist (Default option if none given)\n - `oldest` - Grabs playlists from a channel sorted by the creation date (oldest first)\n - `newest` - Grabs playlists from a channel sorted by the creation date (newest first)\n \n  ```javascript\nconst channelId = 'UCXuqSBlHAE6Xw-yeJA0Tunw'\nconst sortBy = 'last'\n\nytch.getChannelPlaylistInfo(channelId, sortBy).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object\n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with getChannelPlaylistsMore()\n }\n ```\n \n  **getChannelPlaylistsMore(continuation)**\n \n Grabs more playlists within a channel.  Uses the continuation string returned from `getChannelPlaylists()` or from past calls to `getChannelPlaylistsMore()`.\n \n  ```javascript\nconst continuation = '4qmFsgK9ARIYVUNYdXFTQmxIQUU2WHcteWVKQTBUdW53GqABRWdsd2JHRjViR2x6ZEhNZ0FYcG1VVlZzVUdFeGF6VlNiVkoyV1ZjNWJHVnNUbGhTUmxwWVZrVm9kR1ZHYTNoVU1EVnJUVWR3ZFdNd05VVmFSVVo0Vm10NGRsVnJWa2haYkd4dVUyNXZlbEpxUW5WT1YxRjNXbGhyTkZKcVVqVmhibEpXVkVVNWNtSkdUbnBaYXpWWVUxZDNNMVpSdUFFQQ%3D%3D'\n \nytch.getChannelPlaylistsMore(continuation).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object\n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with getChannelPlaylistsMore()\n }\n ```\n \n **searchChannel(channelId, query)**\n \n Searchs for videos and playlists of a given channelId based on the given query\n \n   ```javascript\nconst channelId = 'UCXuqSBlHAE6Xw-yeJA0Tunw'\nconst query = 'linux'\n\nytch.searchChannel(channelId, query).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object\n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with searchChannelMore()\n }\n ```\n \n  **searchChannelMore(continuation)**\n \n Grabs more search results within a channel.  Uses the continuation string returned from `searchChannel()` or from past calls to `searchChannelMore()`.\n \n  ```javascript\nconst continuation = '4qmFsgK9ARIYVUNYdXFTQmxIQUU2WHcteWVKQTBUdW53GqABRWdsd2JHRjViR2x6ZEhNZ0FYcG1VVlZzVUdFeGF6VlNiVkoyV1ZjNWJHVnNUbGhTUmxwWVZrVm9kR1ZHYTNoVU1EVnJUVWR3ZFdNd05VVmFSVVo0Vm10NGRsVnJWa2haYkd4dVUyNXZlbEpxUW5WT1YxRjNXbGhyTkZKcVVqVmhibEpXVkVVNWNtSkdUbnBaYXpWWVUxZDNNMVpSdUFFQQ%3D%3D'\n \nytch.searchChannelMore(continuation).then((response) => {\n   console.log(response)\n}).catch((err) => {\n   console.log(err)\n})\n\n // Response object\n {\n   items: Array[Object],\n   continuation: String // Will return null if no more results can be found.  Used with searchChannelMore()\n }\n ```\n\n## Tests\n\nTests and code standards are still in the process of being created.  Check back later for information on how tests should be performed.\n\n## Contribution\n\nPRs are welcome.  Testing and coding guidlines are still in the works so I will try to get those created at a later point.  Try to keep similar code syntax to the rest of the code.\n\n## Credits\n\nThis is a fork of the `youtube-grabber-js` module created by OlegRom4ig\n\nView the original project on [NPM](https://www.npmjs.com/package/youtube-grabber-js) or [GitLab](https://gitlab.com/olroma123/youtube-grabber-nodejs)\n\n## License\n\nYou have explicit permission to use this project as stated in the terms of the [ISC license](https://github.com/FreeTubeApp/yt-channel-info/blob/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/FreeTubeApp/yt-channel-info.git"
  },
  "scripts": {
    "lint": "eslint --ext .js,.ts ./",
    "lint-fix": "eslint --fix --ext .js,.ts ./",
    "test": "mocha --timeout 2000000 test/**/*.spec.js",
    "test-channel": "mocha --timeout 2000000 test/resourses/channel.spec.js",
    "test-playlist": "mocha --timeout 2000000 test/resourses/playlist.spec.js"
  },
  "version": "1.1.4"
}
